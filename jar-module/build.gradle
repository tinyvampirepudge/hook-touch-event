apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'
// 对应 resources/META-INF.gradle-plugins/xxx.properties 的文件名
//if ("true" == "$applyGradlePlugin") apply plugin: '${PLUGIN_GROUP_ID}'
if ("true" == "$applyGradlePlugin") apply plugin: 'touch.event.gradle.plugin'


android {
    compileSdkVersion 32

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

// https://stackoverflow.com/questions/21712714/how-to-make-a-jar-out-from-an-android-studio-project
// 实际路径有变动
def jarName = "jar-module-output.jar"
task deleteJar(type: Delete) {
    delete 'libs/jars/' + jarName
}

task createJar(type: Copy) {
    // 实际的jar包输出目录
    from('build/intermediates/aar_main_jar/debug/')
    into('libs/jars/')
    include('classes.jar')
    rename('classes.jar', jarName)
}

createJar.dependsOn(deleteJar, build)